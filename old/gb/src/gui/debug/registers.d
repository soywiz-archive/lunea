/*
	Generated by Entice Designer
	Entice Designer written by Christopher E. Miller
	www.dprogramming.com/entice.php
*/

module gui.gdebug.registers;

private import dfl.all;

private import std.string, std.stdio, std.ctype;

class DebugRegisters: dfl.form.Form
{
	// Do not modify or move this block of variables.
	//~Entice Designer variables begin here.
	dfl.listview.ListView listView1;
	//~Entice Designer variables end here.
	
	
	this()
	{
		initializeRegisters();
		
		listView1.view = View.DETAILS;
		
		ColumnHeader cHeader(char[] name, int width = 50) {
			ColumnHeader ch = new ColumnHeader(name);
			ch.width = width;
			return ch;
		}
		
		listView1.columns.add(cHeader("Reg", 32));
		listView1.columns.add(cHeader("Valor", 42));		
		listView1.addRow("PC");
		listView1.addRow("AF");
		listView1.addRow("BC");
		listView1.addRow("DE");
		listView1.addRow("HL");
		listView1.addRow("SP");
		listView1.items[0].subItems.add("0000");
		listView1.items[1].subItems.add("0000");
		listView1.items[2].subItems.add("0000");
		listView1.items[3].subItems.add("0000");
		listView1.items[4].subItems.add("0000");
		listView1.items[5].subItems.add("0000");
		listView1.doubleClick ~= &onDblClick;
	}
	
	char[] doInput(char[] initialValue) {
		Form f;
		TextBox tb;
		with (f = new Form) {
			with (tb = new TextBox) {
				bounds = Rect(0, 0, 120, 16);
				parent = f;
				text = initialValue;
				borderStyle = dfl.base.BorderStyle.NONE;
				keyPress ~= delegate(Control c, KeyEventArgs kea) {
					switch (kea.keyData) {
						case Keys.ESCAPE: (cast(TextBox)c).text = initialValue; (cast(Form)c.parent).close(); break;
						case Keys.ENTER : (cast(Form)c.parent).close(); break;
						default: break;
					}
				};
			}
			formBorderStyle =  dfl.form.FormBorderStyle.FIXED_TOOLWINDOW;
			maximizeBox = false;
			minimizeBox = false;
			showInTaskbar = false;
			clientSize = dfl.drawing.Size(120, 16);
			startPosition = dfl.form.FormStartPosition.CENTER_PARENT;
			text = "Valor";
			showDialog();
		}
		
		return tb.text;
	}

	private void onDblClick(Object o, EventArgs ea) {
		ListView lv = cast(ListView)o;
		char[] sv, rv;
		sv = doInput(lv.selectedItems[0].subItems[0].text);
		
		for (int n = 0; n < sv.length; n++) {
			char c = std.ctype.toupper(sv[n]);
			if (c >= '0' && c <= '9') {
				rv ~= c;
			} else if (c >= 'A' && c <= 'F') {
				rv ~= c;
			}
		}
		
		if (rv.length > 4) rv = rv[rv.length - 4..rv.length];
		while (rv.length < 4) rv = "0" ~ rv;
		
		lv.selectedItems[0].subItems[0].text = rv;
		lv.refresh();
	}	
	
	private void initializeRegisters()
	{
		// Do not manually modify this function.
		//~Entice Designer 0.8.2.1 code begins here.
		//~DFL Form
		formBorderStyle = dfl.form.FormBorderStyle.FIXED_TOOLWINDOW;
		startPosition = dfl.form.FormStartPosition.MANUAL;
		text = "Registers";
		clientSize = dfl.drawing.Size(74, 108);
		//~DFL dfl.listview.ListView=listView1
		listView1 = new dfl.listview.ListView();
		listView1.name = "listView1";
		listView1.dock = dfl.control.DockStyle.FILL;
		listView1.borderStyle = dfl.base.BorderStyle.NONE;
		listView1.fullRowSelect = true;
		listView1.gridLines = true;
		listView1.hideSelection = false;
		listView1.labelWrap = false;
		listView1.multiSelect = false;
		listView1.scrollable = false;
		listView1.view = dfl.base.View.DETAILS;
		listView1.bounds = Rect(0, 0, 74, 108);
		listView1.parent = this;
		//~Entice Designer 0.8.2.1 code ends here.
	}
}
