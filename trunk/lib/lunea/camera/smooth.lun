process SmoothKeyScroll {
	public real vx = 0, vy = 0;
	//private real rx = 0, ry = 0;

	public real vxmax = 20, vymax = 20;
	public real x1 = 0, y1 = 0, x2 = 0, y2 = 0;
	public real w = 0, h = 0;

	private void setst(real x1, real y1, real x2, real y2) {
		this.x1 = x1;
		this.y1 = y1;
		this.x2 = x2;
		this.y2 = y2;

		y = x = 0;
	}

	public this(real x1, real y1, real x2, real y2) {
		setst(x1, y1, x2, y2);
		this.w = Screen.width;
		this.h = Screen.height;
	}

	public this(real x1, real y1, real x2, real y2, real width, real height) {
		setst(x1, y1, x2, y2);
		this.w = width;
		this.h = height;
	}

	public void set(real x, real y) {
		this.x = -x;
		this.y = -y;
	}

	private void limit(inout real var, real min, real max) {
		if (min > max) {
			real temp = max;
			max = min;
			min = temp;
		}

		if (var < min) var = min;
		if (var > max) var = max;
	}

	action main {
		bit pressed = false;
		real msx, msy;
		real sx, sy;

		while (true) {
			if (Mouse.right) {
				if (!pressed) {
					msx = Mouse.x;
					msy = Mouse.y;
					sx = x;
					sy = y;
					pressed = true;
				} else {
					x = sx - (Mouse.x - msx) * 3;
					y = sy - (Mouse.y - msy) * 3;
					vx = vy = 0;
				}
			} else {
				pressed = false;

				if (key[_left])  vx += 2;
				if (key[_right]) vx -= 2;
				if (key[_up])    vy += 2;
				if (key[_down])  vy -= 2;

				if (vx != 0) vx += (vx < 0) ? 1 : -1;
				if (vy != 0) vy += (vy < 0) ? 1 : -1;

				if (abs(vx) >= vxmax) vx = (vx > 0) ? vxmax : -vxmax;
				if (abs(vy) >= vymax) vy = (vy > 0) ? vymax : -vymax;

				x += vx; y += vy;
			}

			limit(x, w - x2, -x1);
			limit(y, h - y2, -y1);

			frame();
		}
	}
}